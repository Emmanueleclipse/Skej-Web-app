{"version":3,"sources":["webpack:///../../../../src/components/VCalendar/mixins/mouse.ts","webpack:///../../../../src/components/VCalendar/mixins/times.ts","webpack:///../../../../src/components/VCalendar/modes/common.ts","webpack:///../../../../src/components/VCalendar/modes/stack.ts","webpack:///../../../../src/components/VCalendar/modes/column.ts","webpack:///../../../../src/components/VCalendar/modes/index.ts","webpack:///../../../../src/components/VCalendar/util/props.ts","webpack:///../../../../src/components/VCalendar/mixins/calendar-base.ts","webpack:///../../../../src/components/VCalendar/util/events.ts","webpack:///../../../../src/components/VCalendar/mixins/calendar-with-events.ts","webpack:///../../../src/components/VCalendar/VCalendarWeekly.ts","webpack:///../../../src/components/VCalendar/VCalendarMonthly.ts","webpack:///../../../../src/components/VCalendar/mixins/calendar-with-intervals.ts","webpack:///../../../src/components/VCalendar/VCalendarDaily.ts","webpack:///../../../src/components/VCalendar/VCalendar.ts","webpack:///./node_modules/core-js/modules/es.number.max-safe-integer.js","webpack:///../../../src/directives/resize/index.ts"],"names":["name","methods","getDefaultMouseEventHandlers","this","getMouseEventHandlers","event","prevent","result","on","eventOptions","events","prefix","key","handler","e","mouseEvent","getEvent","Array","props","now","type","validator","data","times","today","computed","parsedNow","watch","created","setPresent","present","past","future","updateTimes","getNow","updateDay","target","updateTime","MILLIS_IN_DAY","minStart","visuals","columnCount","column","left","width","Math","a","b","exclude","s0","e0","groups","group","groupVisual","dayStart","i","intersected","hasOverlap","start","end","k","timed","getRange","getDayRange","groupStart","groupEnd","min","max","reset","getVisuals","day","dayEvents","visual","setColumnCount","targetGroup","getOpenGroup","FULL_WIDTH","DEFAULT_OFFSET","WIDTH_MULTIPLIER","firstWeekday","overlapThreshold","getOverlapGroupHandler","getGroups","nodes","child","getNode","index","getNextIndex","parent","getParent","addTime","getOverlappingRange","children","grand","grandNext","calculateBounds","columns","getMaxChildIndex","spaceLeft","spaceWidth","offset","columnWidthMultiplier","getColumnWidthMultiplier","node","columnOffset","columnWidth","hasFullWidth","maxColumn","minColumn","c","getOverlappingIndices","indices","other","returnFirstColumn","overlapping","first","n","getNormalizedRange","added","sibling","childMax","removeMinutes","identifier","totalMinutes","addHours","addMinutes","CalendarEventOverlapModes","stack","base","validate","default","date","weekdays","validateWeekdays","hideHeader","shortWeekdays","weekdayFormat","dayFormat","intervals","maxDays","shortIntervals","intervalHeight","Number","validateNumber","intervalWidth","intervalMinutes","firstInterval","intervalCount","intervalFormat","intervalStyle","showIntervalLabel","weeks","minWeeks","shortMonths","showMonthOnFirst","monthFormat","calendar","value","eventStart","eventEnd","eventHeight","eventColor","String","eventTextColor","eventName","eventOverlapThreshold","eventOverlapMode","mode","eventMore","eventMoreText","eventRipple","Boolean","eventMarginBottom","isFinite","parseInt","input","ints","x","visited","wrapped","d","mixins","directives","Resize","parsedWeekdays","weekdaySkips","weekdaySkipsReverse","reversed","reverse","parsedStart","parsedEnd","days","dayFormatter","options","timeZone","weekdayFormatter","longOptions","weekday","shortOptions","short","getRelativeClasses","outside","timestamp","getStartOfWeek","getEndOfWeek","getFormatter","startIdentifier","startTimestampIdentifier","endIdentifier","endOffset","endTimestampIdentifier","allDay","dayIdentifier","isEventOn","WIDTH_FULL","WIDTH_START","MINUTES_IN_DAY","ripple","noEvents","length","parsedEvents","map","parseEvent","parsedEventOverlapThreshold","eventColorFunction","eventTextColorFunction","eventNameFunction","showStart","singline","separator","time","eventModeFunction","eventWeekdays","formatTime","formatter","hour","minute","withTime","undefined","updateEventVisibility","eventsMap","more","parentBounds","last","hide","hidden","eventBounds","$vuetify","lang","t","getEventsMap","elements","$refs","el","genDayEvent","week","weekdayIdentifier","scope","genEvent","staticClass","class","style","height","attrs","ref","refInFor","genTimedEvent","top","bottom","slot","$scopedSlots","text","background","$createElement","setTextColor","setBackgroundColor","nativeEvent","genName","domProps","innerHTML","timedEvent","genPlaceholder","genMore","click","display","getVisibleEvents","filter","isEventOverlapping","getEventsForDay","isEventStart","getEventsForDayAll","getEventsForDayTimed","getScopedSlots","getSlotChildren","getter","mapper","slots","slotDay","slotDayHeader","slotDayBody","classes","parsedMinWeeks","minDays","todayWeek","monthFormatter","month","isOutside","genHead","genHeadDays","genHeadDay","color","genWeeks","weekDays","genWeek","genDay","_e","genDayLabel","genDayLabelButton","hasMonth","VBtn","fab","depressed","small","stop","genDayMonth","render","h","nativeOn","dragstart","parsedFirstInterval","parsedIntervalMinutes","parsedIntervalCount","parsedIntervalHeight","parseFloat","firstMinute","bodyHeight","minutes","count","intervalFormatter","shortHourOptions","tms","showIntervalLabelDefault","isFirst","interval","intervalStyleDefault","getTimestampAtEvent","bounds","baseMinutes","touchEvent","touches","clientY","addIntervals","getSlotScope","scrollToTime","y","timeToY","pane","minutesToPixels","clamp","gap","delta","scrollPush","themeClasses","mounted","init","onResize","getScrollPush","area","marginRight","genHeadIntervals","header","genHeadWeekday","genHeadDayLabel","genHeadDayButton","genBody","genScrollArea","genPane","genDayContainer","genDays","genDayIntervals","genDayInterval","styler","genBodyIntervals","genIntervalLabels","genIntervalLabel","shower","show","label","modifiers","quiet","lastStart","lastEnd","parsedValue","renderProps","around","component","Error","updated","window","checkChange","move","amount","moved","forward","mover","limit","next","prev","$children","scopedSlots","$","stat","MAX_SAFE_INTEGER","inserted","callback","binding","passive","unbind"],"mappings":"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","file":"js/chunk-e821ee7a.b3f8db1c.js","sourcesContent":["import Vue from 'vue'\n\nexport type MouseHandler = (e: MouseEvent | TouchEvent) => any\n\nexport type MouseEvents = {\n  [event: string]: {\n    event: string\n    passive?: boolean\n    capture?: boolean\n    once?: boolean\n    stop?: boolean\n    prevent?: boolean\n    button?: number\n    result?: any\n  }\n}\n\nexport type MouseEventsMap = {\n  [event: string]: MouseHandler | MouseHandler[]\n}\n\nexport default Vue.extend({\n  name: 'mouse',\n\n  methods: {\n    getDefaultMouseEventHandlers (suffix: string, getEvent: MouseHandler): MouseEventsMap {\n      return this.getMouseEventHandlers({\n        ['click' + suffix]: { event: 'click' },\n        ['contextmenu' + suffix]: { event: 'contextmenu', prevent: true, result: false },\n        ['mousedown' + suffix]: { event: 'mousedown' },\n        ['mousemove' + suffix]: { event: 'mousemove' },\n        ['mouseup' + suffix]: { event: 'mouseup' },\n        ['mouseenter' + suffix]: { event: 'mouseenter' },\n        ['mouseleave' + suffix]: { event: 'mouseleave' },\n        ['touchstart' + suffix]: { event: 'touchstart' },\n        ['touchmove' + suffix]: { event: 'touchmove' },\n        ['touchend' + suffix]: { event: 'touchend' },\n      }, getEvent)\n    },\n    getMouseEventHandlers (events: MouseEvents, getEvent: MouseHandler): MouseEventsMap {\n      const on: MouseEventsMap = {}\n\n      for (const event in events) {\n        const eventOptions = events[event]\n\n        if (!this.$listeners[event]) continue\n\n        // TODO somehow pull in modifiers\n\n        const prefix = eventOptions.passive ? '&' : ((eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : ''))\n        const key = prefix + eventOptions.event\n\n        const handler: MouseHandler = e => {\n          const mouseEvent: MouseEvent = e as MouseEvent\n          if (eventOptions.button === undefined || (mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button)) {\n            if (eventOptions.prevent) {\n              e.preventDefault()\n            }\n            if (eventOptions.stop) {\n              e.stopPropagation()\n            }\n            this.$emit(event, getEvent(e))\n          }\n\n          return eventOptions.result\n        }\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            (on[key] as MouseHandler[]).push(handler)\n          } else {\n            on[key] = [on[key], handler] as MouseHandler[]\n          }\n        } else {\n          on[key] = handler\n        }\n      }\n\n      return on\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport {\n  validateTimestamp,\n  parseTimestamp,\n  parseDate,\n} from '../util/timestamp'\nimport { CalendarTimestamp } from 'types'\n\nexport default Vue.extend({\n  name: 'times',\n\n  props: {\n    now: {\n      type: String,\n      validator: validateTimestamp,\n    },\n  },\n\n  data: () => ({\n    times: {\n      now: parseTimestamp('0000-00-00 00:00', true),\n      today: parseTimestamp('0000-00-00', true),\n    },\n  }),\n\n  computed: {\n    parsedNow (): CalendarTimestamp | null {\n      return this.now ? parseTimestamp(this.now, true) : null\n    },\n  },\n\n  watch: {\n    parsedNow: 'updateTimes',\n  },\n\n  created () {\n    this.updateTimes()\n    this.setPresent()\n  },\n\n  methods: {\n    setPresent (): void {\n      this.times.now.present = this.times.today.present = true\n      this.times.now.past = this.times.today.past = false\n      this.times.now.future = this.times.today.future = false\n    },\n    updateTimes (): void {\n      const now: CalendarTimestamp = this.parsedNow || this.getNow()\n      this.updateDay(now, this.times.now)\n      this.updateTime(now, this.times.now)\n      this.updateDay(now, this.times.today)\n    },\n    getNow (): CalendarTimestamp {\n      return parseDate(new Date())\n    },\n    updateDay (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.date !== target.date) {\n        target.year = now.year\n        target.month = now.month\n        target.day = now.day\n        target.weekday = now.weekday\n        target.date = now.date\n      }\n    },\n    updateTime (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.time !== target.time) {\n        target.hour = now.hour\n        target.minute = now.minute\n        target.time = now.time\n      }\n    },\n  },\n})\n","import { CalendarEventParsed, CalendarEventVisual, CalendarTimestamp } from 'types'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\nconst MILLIS_IN_DAY = 86400000\n\nexport type GetRange = (event: CalendarEventParsed) => [number, number]\n\nexport function getVisuals (events: CalendarEventParsed[], minStart = 0): CalendarEventVisual[] {\n  const visuals = events.map(event => ({\n    event,\n    columnCount: 0,\n    column: 0,\n    left: 0,\n    width: 100,\n  }))\n\n  visuals.sort((a, b) => {\n    return (Math.max(minStart, a.event.startTimestampIdentifier) - Math.max(minStart, b.event.startTimestampIdentifier)) ||\n           (b.event.endTimestampIdentifier - a.event.endTimestampIdentifier)\n  })\n\n  return visuals\n}\n\nexport interface ColumnGroup {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\nexport function hasOverlap (s0: number, e0: number, s1: number, e1: number, exclude = true): boolean {\n  return exclude ? !(s0 >= e1 || e0 <= s1) : !(s0 > e1 || e0 < s1)\n}\n\nexport function setColumnCount (groups: ColumnGroup[]) {\n  groups.forEach(group => {\n    group.visuals.forEach(groupVisual => {\n      groupVisual.columnCount = groups.length\n    })\n  })\n}\n\nexport function getRange (event: CalendarEventParsed): [number, number] {\n  return [event.startTimestampIdentifier, event.endTimestampIdentifier]\n}\n\nexport function getDayRange (event: CalendarEventParsed): [number, number] {\n  return [event.startIdentifier, event.endIdentifier]\n}\n\nexport function getNormalizedRange (event: CalendarEventParsed, dayStart: number): [number, number] {\n  return [Math.max(dayStart, event.startTimestampIdentifier), Math.min(dayStart + MILLIS_IN_DAY, event.endTimestampIdentifier)]\n}\n\nexport function getOpenGroup (groups: ColumnGroup[], start: number, end: number, timed: boolean) {\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i]\n    let intersected = false\n\n    if (hasOverlap(start, end, group.start, group.end, timed)) {\n      for (let k = 0; k < group.visuals.length; k++) {\n        const groupVisual = group.visuals[k]\n        const [groupStart, groupEnd] = timed ? getRange(groupVisual.event) : getDayRange(groupVisual.event)\n\n        if (hasOverlap(start, end, groupStart, groupEnd, timed)) {\n          intersected = true\n          break\n        }\n      }\n    }\n\n    if (!intersected) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport function getOverlapGroupHandler (firstWeekday: number) {\n  const handler = {\n    groups: [] as ColumnGroup[],\n    min: -1,\n    max: -1,\n    reset: () => {\n      handler.groups = []\n      handler.min = handler.max = -1\n    },\n    getVisuals: (day: CalendarTimestamp, dayEvents: CalendarEventParsed[], timed: boolean) => {\n      if (day.weekday === firstWeekday || timed) {\n        handler.reset()\n      }\n\n      const dayStart = getTimestampIdentifier(day)\n      const visuals = getVisuals(dayEvents, dayStart)\n\n      visuals.forEach(visual => {\n        const [start, end] = timed ? getRange(visual.event) : getDayRange(visual.event)\n\n        if (handler.groups.length > 0 && !hasOverlap(start, end, handler.min, handler.max, timed)) {\n          setColumnCount(handler.groups)\n          handler.reset()\n        }\n\n        let targetGroup = getOpenGroup(handler.groups, start, end, timed)\n\n        if (targetGroup === -1) {\n          targetGroup = handler.groups.length\n\n          handler.groups.push({ start, end, visuals: [] })\n        }\n\n        const target = handler.groups[targetGroup]\n        target.visuals.push(visual)\n        target.start = Math.min(target.start, start)\n        target.end = Math.max(target.end, end)\n\n        visual.column = targetGroup\n\n        if (handler.min === -1) {\n          handler.min = start\n          handler.max = end\n        } else {\n          handler.min = Math.min(handler.min, start)\n          handler.max = Math.max(handler.max, end)\n        }\n      })\n\n      setColumnCount(handler.groups)\n\n      return visuals\n    },\n  }\n\n  return handler\n}\n","import { CalendarEventOverlapMode, CalendarEventVisual } from 'types'\nimport { getOverlapGroupHandler, getVisuals, hasOverlap, getNormalizedRange } from './common'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\ninterface Group {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\ninterface Node {\n  parent: Node | null\n  sibling: boolean\n  index: number\n  visual: CalendarEventVisual\n  start: number\n  end: number\n  children: Node[]\n}\n\nconst FULL_WIDTH = 100\n\nconst DEFAULT_OFFSET = 5\n\nconst WIDTH_MULTIPLIER = 1.7\n\n/**\n * Variation of column mode where events can be stacked. The priority of this\n * mode is to stack events together taking up the least amount of space while\n * trying to ensure the content of the event is always visible as well as its\n * start and end. A sibling column has intersecting event content and must be\n * placed beside each other. Non-sibling columns are offset by 5% from the\n * previous column. The width is scaled by 1.7 so the events overlap and\n * whitespace is reduced. If there is a hole in columns the event width is\n * scaled up so it intersects with the next column. The columns have equal\n * width in the space they are given. If the event doesn't have any to the\n * right of it that intersect with it's content it's right side is extended\n * to the right side.\n */\n\nexport const stack: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  // eslint-disable-next-line max-statements\n  return (day, dayEvents, timed) => {\n    if (!timed) {\n      return handler.getVisuals(day, dayEvents, timed)\n    }\n\n    const dayStart = getTimestampIdentifier(day)\n    const visuals = getVisuals(dayEvents, dayStart)\n    const groups = getGroups(visuals, dayStart)\n\n    for (const group of groups) {\n      const nodes: Node[] = []\n\n      for (const visual of group.visuals) {\n        const child = getNode(visual, dayStart)\n        const index = getNextIndex(child, nodes)\n\n        if (index === false) {\n          const parent = getParent(child, nodes)\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            child.index = parent.index + 1\n            parent.children.push(child)\n          }\n        } else {\n          const [parent] = getOverlappingRange(child, nodes, index - 1, index - 1)\n          const children = getOverlappingRange(child, nodes, index + 1, index + nodes.length, true)\n\n          child.children = children\n          child.index = index\n\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            parent.children.push(child)\n          }\n\n          for (const grand of children) {\n            if (grand.parent === parent) {\n              grand.parent = child\n            }\n\n            const grandNext = grand.index - child.index <= 1\n            if (grandNext && child.sibling &&\n              hasOverlap(child.start, addTime(child.start, overlapThreshold), grand.start, grand.end)) {\n              grand.sibling = true\n            }\n          }\n        }\n\n        nodes.push(child)\n      }\n\n      calculateBounds(nodes, overlapThreshold)\n    }\n\n    visuals.sort((a, b) => (a.left - b.left) || (a.event.startTimestampIdentifier - b.event.startTimestampIdentifier))\n\n    return visuals\n  }\n}\n\nfunction calculateBounds (nodes: Node[], overlapThreshold: number) {\n  for (const node of nodes) {\n    const { visual, parent } = node\n    const columns = getMaxChildIndex(node) + 1\n    const spaceLeft = parent ? parent.visual.left : 0\n    const spaceWidth = FULL_WIDTH - spaceLeft\n    const offset = Math.min(DEFAULT_OFFSET, FULL_WIDTH / columns)\n    const columnWidthMultiplier = getColumnWidthMultiplier(node, nodes)\n    const columnOffset = spaceWidth / (columns - node.index + 1)\n    const columnWidth = spaceWidth / (columns - node.index + (node.sibling ? 1 : 0)) * columnWidthMultiplier\n\n    if (parent) {\n      visual.left = node.sibling\n        ? spaceLeft + columnOffset\n        : spaceLeft + offset\n    }\n\n    visual.width = hasFullWidth(node, nodes, overlapThreshold)\n      ? FULL_WIDTH - visual.left\n      : Math.min(FULL_WIDTH - visual.left, columnWidth * WIDTH_MULTIPLIER)\n  }\n}\n\nfunction getColumnWidthMultiplier (node: Node, nodes: Node[]): number {\n  if (!node.children.length) {\n    return 1\n  }\n\n  const maxColumn = node.index + nodes.length\n  const minColumn = node.children.reduce((min, c) => Math.min(min, c.index), maxColumn)\n\n  return minColumn - node.index\n}\n\nfunction getOverlappingIndices (node: Node, nodes: Node[]): number[] {\n  const indices: number[] = []\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end)) {\n      indices.push(other.index)\n    }\n  }\n  return indices\n}\n\nfunction getNextIndex (node: Node, nodes: Node[]): number | false {\n  const indices = getOverlappingIndices(node, nodes)\n  indices.sort()\n\n  for (let i = 0; i < indices.length; i++) {\n    if (i < indices[i]) {\n      return i\n    }\n  }\n  return false\n}\n\nfunction getOverlappingRange (node: Node, nodes: Node[], indexMin: number, indexMax: number, returnFirstColumn = false): Node[] {\n  const overlapping: Node[] = []\n  for (const other of nodes) {\n    if (other.index >= indexMin && other.index <= indexMax && hasOverlap(node.start, node.end, other.start, other.end)) {\n      overlapping.push(other)\n    }\n  }\n  if (returnFirstColumn && overlapping.length > 0) {\n    const first = overlapping.reduce((min, n) => Math.min(min, n.index), overlapping[0].index)\n    return overlapping.filter(n => n.index === first)\n  }\n  return overlapping\n}\n\nfunction getParent (node: Node, nodes: Node[]): Node | null {\n  let parent: Node | null = null\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end) && (parent === null || other.index > parent.index)) {\n      parent = other\n    }\n  }\n  return parent\n}\n\nfunction hasFullWidth (node: Node, nodes: Node[], overlapThreshold: number): boolean {\n  for (const other of nodes) {\n    if (other !== node &&\n      other.index > node.index &&\n      hasOverlap(node.start, addTime(node.start, overlapThreshold), other.start, other.end)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction getGroups (visuals: CalendarEventVisual[], dayStart: number): Group[] {\n  const groups: Group[] = []\n\n  for (const visual of visuals) {\n    const [start, end] = getNormalizedRange(visual.event, dayStart)\n    let added = false\n\n    for (const group of groups) {\n      if (hasOverlap(start, end, group.start, group.end)) {\n        group.visuals.push(visual)\n        group.end = Math.max(group.end, end)\n        added = true\n        break\n      }\n    }\n\n    if (!added) {\n      groups.push({ start, end, visuals: [visual] })\n    }\n  }\n\n  return groups\n}\n\nfunction getNode (visual: CalendarEventVisual, dayStart: number): Node {\n  const [start, end] = getNormalizedRange(visual.event, dayStart)\n\n  return {\n    parent: null,\n    sibling: true,\n    index: 0,\n    visual,\n    start,\n    end,\n    children: [],\n  }\n}\n\nfunction getMaxChildIndex (node: Node): number {\n  let max = node.index\n  for (const child of node.children) {\n    const childMax = getMaxChildIndex(child)\n    if (childMax > max) {\n      max = childMax\n    }\n  }\n  return max\n}\n\nfunction addTime (identifier: number, minutes: number): number {\n  const removeMinutes = identifier % 100\n  const totalMinutes = removeMinutes + minutes\n  const addHours = Math.floor(totalMinutes / 60)\n  const addMinutes = totalMinutes % 60\n\n  return identifier - removeMinutes + addHours * 100 + addMinutes\n}\n","import { CalendarEventOverlapMode } from 'types'\nimport { getOverlapGroupHandler } from './common'\n\nconst FULL_WIDTH = 100\n\nexport const column: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  return (day, dayEvents, timed) => {\n    const visuals = handler.getVisuals(day, dayEvents, timed)\n\n    if (timed) {\n      visuals.forEach(visual => {\n        visual.left = visual.column * FULL_WIDTH / visual.columnCount\n        visual.width = FULL_WIDTH / visual.columnCount\n      })\n    }\n\n    return visuals\n  }\n}\n","import { CalendarEventOverlapMode } from 'types'\nimport { stack } from './stack'\nimport { column } from './column'\n\nexport const CalendarEventOverlapModes: Record<string, CalendarEventOverlapMode> = {\n  stack,\n  column,\n}\n","\nimport { validateTimestamp, parseDate, DAYS_IN_WEEK } from './timestamp'\nimport { PropType } from 'vue'\nimport { CalendarEvent, CalendarFormatter, CalendarTimestamp, CalendarEventOverlapMode } from 'types'\nimport { CalendarEventOverlapModes } from '../modes'\nimport { PropValidator } from 'vue/types/options'\n\nexport default {\n  base: {\n    start: {\n      type: String,\n      validate: validateTimestamp,\n      default: () => parseDate(new Date()).date,\n    },\n    end: {\n      type: String,\n      validate: validateTimestamp,\n    },\n    weekdays: {\n      type: [Array, String],\n      default: () => [0, 1, 2, 3, 4, 5, 6],\n      validate: validateWeekdays,\n    } as PropValidator<number[] | string>,\n    hideHeader: {\n      type: Boolean,\n      default: false,\n    },\n    shortWeekdays: {\n      type: Boolean,\n      default: true,\n    },\n    weekdayFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n    dayFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n  },\n  intervals: {\n    maxDays: {\n      type: Number,\n      default: 7,\n    },\n    shortIntervals: {\n      type: Boolean,\n      default: true,\n    },\n    intervalHeight: {\n      type: [Number, String],\n      default: 48,\n      validate: validateNumber,\n    },\n    intervalWidth: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber,\n    },\n    intervalMinutes: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber,\n    },\n    firstInterval: {\n      type: [Number, String],\n      default: 0,\n      validate: validateNumber,\n    },\n    intervalCount: {\n      type: [Number, String],\n      default: 24,\n      validate: validateNumber,\n    },\n    intervalFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n    intervalStyle: {\n      type: Function as PropType<(interval: CalendarTimestamp) => object>,\n      default: null,\n    },\n    showIntervalLabel: {\n      type: Function as PropType<(interval: CalendarTimestamp) => boolean>,\n      default: null,\n    },\n  },\n  weeks: {\n    minWeeks: {\n      validate: validateNumber,\n      default: 1,\n    },\n    shortMonths: {\n      type: Boolean,\n      default: true,\n    },\n    showMonthOnFirst: {\n      type: Boolean,\n      default: true,\n    },\n    monthFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n  },\n  calendar: {\n    type: {\n      type: String,\n      default: 'month',\n    },\n    value: {\n      type: String,\n      validate: validateTimestamp,\n    },\n  },\n  events: {\n    events: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<CalendarEvent[]>,\n    eventStart: {\n      type: String,\n      default: 'start',\n    },\n    eventEnd: {\n      type: String,\n      default: 'end',\n    },\n    eventHeight: {\n      type: Number,\n      default: 20,\n    },\n    eventColor: {\n      type: [String, Function],\n      default: 'primary',\n    },\n    eventTextColor: {\n      type: [String, Function],\n      default: 'white',\n    },\n    eventName: {\n      type: [String, Function],\n      default: 'name',\n    },\n    eventOverlapThreshold: {\n      type: [String, Number],\n      default: 60,\n    },\n    eventOverlapMode: {\n      type: [String, Function],\n      default: 'stack',\n      validate: (mode: any) => mode in CalendarEventOverlapModes || typeof mode === 'function',\n    } as PropValidator<'stack' | 'column' | CalendarEventOverlapMode>,\n    eventMore: {\n      type: Boolean,\n      default: true,\n    },\n    eventMoreText: {\n      type: String,\n      default: '$vuetify.calendar.moreEvents',\n    },\n    eventRipple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    eventMarginBottom: {\n      type: Number,\n      default: 1,\n    },\n  },\n}\n\nexport function validateNumber (input: any): boolean {\n  return isFinite(parseInt(input))\n}\n\nexport function validateWeekdays (input: string | (number | string)[]): boolean {\n  if (typeof input === 'string') {\n    input = input.split(',')\n  }\n\n  if (Array.isArray(input)) {\n    const ints = input.map(x => parseInt(x))\n\n    if (ints.length > DAYS_IN_WEEK || ints.length === 0) {\n      return false\n    }\n\n    const visited: Record<number, boolean> = {}\n    let wrapped = false\n\n    for (let i = 0; i < ints.length; i++) {\n      const x = ints[i]\n\n      if (!isFinite(x) || x < 0 || x >= DAYS_IN_WEEK) {\n        return false\n      }\n\n      if (i > 0) {\n        const d = x - ints[i - 1]\n        if (d < 0) {\n          if (wrapped) {\n            return false\n          }\n          wrapped = true\n        } else if (d === 0) {\n          return false\n        }\n      }\n\n      if (visited[x]) {\n        return false\n      }\n      visited[x] = true\n    }\n\n    return true\n  }\n\n  return false\n}\n","\n// Mixins\nimport mixins from '../../../util/mixins'\nimport Colorable from '../../../mixins/colorable'\nimport Localable from '../../../mixins/localable'\nimport Mouse from './mouse'\nimport Themeable from '../../../mixins/themeable'\nimport Times from './times'\n\n// Directives\nimport Resize from '../../../directives/resize'\n\n// Util\nimport props from '../util/props'\nimport {\n  parseTimestamp,\n  getWeekdaySkips,\n  createDayList,\n  createNativeLocaleFormatter,\n  getStartOfWeek,\n  getEndOfWeek,\n  getTimestampIdentifier,\n} from '../util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter } from 'types'\n\nexport default mixins(\n  Colorable,\n  Localable,\n  Mouse,\n  Themeable,\n  Times\n/* @vue/component */\n).extend({\n  name: 'calendar-base',\n\n  directives: {\n    Resize,\n  },\n\n  props: props.base,\n\n  computed: {\n    parsedWeekdays (): number[] {\n      return Array.isArray(this.weekdays)\n        ? this.weekdays\n        : (this.weekdays || '').split(',').map(x => parseInt(x, 10))\n    },\n    weekdaySkips (): number[] {\n      return getWeekdaySkips(this.parsedWeekdays)\n    },\n    weekdaySkipsReverse (): number [] {\n      const reversed = this.weekdaySkips.slice()\n      reversed.reverse()\n      return reversed\n    },\n    parsedStart (): CalendarTimestamp {\n      return parseTimestamp(this.start, true)\n    },\n    parsedEnd (): CalendarTimestamp {\n      const start = this.parsedStart\n      const end: CalendarTimestamp = this.end ? parseTimestamp(this.end) || start : start\n\n      return getTimestampIdentifier(end) < getTimestampIdentifier(start) ? start : end\n    },\n    days (): CalendarTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips\n      )\n    },\n    dayFormatter (): CalendarFormatter {\n      if (this.dayFormat) {\n        return this.dayFormat as CalendarFormatter\n      }\n\n      const options = { timeZone: 'UTC', day: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, _short) => options\n      )\n    },\n    weekdayFormatter (): CalendarFormatter {\n      if (this.weekdayFormat) {\n        return this.weekdayFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', weekday: 'long' }\n      const shortOptions = { timeZone: 'UTC', weekday: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    getRelativeClasses (timestamp: CalendarTimestamp, outside = false): object {\n      return {\n        'v-present': timestamp.present,\n        'v-past': timestamp.past,\n        'v-future': timestamp.future,\n        'v-outside': outside,\n      }\n    },\n    getStartOfWeek (timestamp: CalendarTimestamp): CalendarTimestamp {\n      return getStartOfWeek(timestamp, this.parsedWeekdays, this.times.today)\n    },\n    getEndOfWeek (timestamp: CalendarTimestamp): CalendarTimestamp {\n      return getEndOfWeek(timestamp, this.parsedWeekdays, this.times.today)\n    },\n    getFormatter (options: object): CalendarFormatter {\n      return createNativeLocaleFormatter(\n        this.locale,\n        (_tms, _short) => options\n      )\n    },\n  },\n})\n","import {\n  parseTimestamp,\n  getDayIdentifier,\n  getTimestampIdentifier,\n  OFFSET_TIME,\n} from './timestamp'\nimport { CalendarTimestamp, CalendarEvent, CalendarEventParsed } from 'types'\n\nexport function parseEvent (input: CalendarEvent, index: number, startProperty: string, endProperty: string): CalendarEventParsed {\n  const start: CalendarTimestamp = parseTimestamp(input[startProperty], true)\n  const end: CalendarTimestamp = (input[endProperty] ? parseTimestamp(input[endProperty], true) : start)\n  const startIdentifier: number = getDayIdentifier(start)\n  const startTimestampIdentifier: number = getTimestampIdentifier(start)\n  const endIdentifier: number = getDayIdentifier(end)\n  const endOffset: number = start.hasTime ? 0 : 2359\n  const endTimestampIdentifier: number = getTimestampIdentifier(end) + endOffset\n  const allDay: boolean = !start.hasTime\n\n  return { input, start, startIdentifier, startTimestampIdentifier, end, endIdentifier, endTimestampIdentifier, allDay, index }\n}\n\nexport function isEventOn (event: CalendarEventParsed, dayIdentifier: number): boolean {\n  return dayIdentifier >= event.startIdentifier &&\n    dayIdentifier <= event.endIdentifier &&\n    dayIdentifier * OFFSET_TIME !== event.endTimestampIdentifier\n}\n\nexport function isEventStart (event: CalendarEventParsed, day: CalendarTimestamp, dayIdentifier: number, firstWeekday: number): boolean {\n  return dayIdentifier === event.startIdentifier || (firstWeekday === day.weekday && isEventOn(event, dayIdentifier))\n}\n\nexport function isEventOverlapping (event: CalendarEventParsed, startIdentifier: number, endIdentifier: number): boolean {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier\n}\n","// Styles\nimport './calendar-with-events.sass'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n// Directives\nimport ripple from '../../../directives/ripple'\n\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Helpers\nimport { escapeHTML } from '../../../util/helpers'\n\n// Util\nimport props from '../util/props'\nimport {\n  CalendarEventOverlapModes,\n} from '../modes'\nimport {\n  getDayIdentifier, diffMinutes,\n} from '../util/timestamp'\nimport {\n  parseEvent,\n  isEventStart,\n  isEventOn,\n  isEventOverlapping,\n} from '../util/events'\nimport {\n  CalendarTimestamp,\n  CalendarEventParsed,\n  CalendarEventVisual,\n  CalendarEventColorFunction,\n  CalendarEventNameFunction,\n  CalendarDaySlotScope,\n  CalendarDayBodySlotScope,\n  CalendarEventOverlapMode,\n} from 'types'\n\n// Types\ntype VEventGetter = (day: CalendarTimestamp) => CalendarEventParsed[]\n\ntype VEventVisualToNode<D> = (visual: CalendarEventVisual, day: D) => VNode\n\ntype VEventsToNodes = <D extends CalendarDaySlotScope>(\n  day: D,\n  getter: VEventGetter,\n  mapper: VEventVisualToNode<D>,\n  timed: boolean) => VNode[] | undefined\n\ntype VDailyEventsMap = {\n  [date: string]: {\n    parent: HTMLElement\n    more: HTMLElement | null\n    events: HTMLElement[]\n  }\n}\n\nconst WIDTH_FULL = 100\nconst WIDTH_START = 95\nconst MINUTES_IN_DAY = 1440\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-events',\n\n  directives: {\n    ripple,\n  },\n\n  props: props.events,\n\n  computed: {\n    noEvents (): boolean {\n      return this.events.length === 0\n    },\n    parsedEvents (): CalendarEventParsed[] {\n      return this.events.map((input, index) => parseEvent(input, index, this.eventStart, this.eventEnd))\n    },\n    parsedEventOverlapThreshold (): number {\n      return parseInt(this.eventOverlapThreshold)\n    },\n    eventColorFunction (): CalendarEventColorFunction {\n      return typeof this.eventColor === 'function'\n        ? this.eventColor as CalendarEventColorFunction\n        : () => (this.eventColor as string)\n    },\n    eventTextColorFunction (): CalendarEventColorFunction {\n      return typeof this.eventTextColor === 'function'\n        ? this.eventTextColor as CalendarEventColorFunction\n        : () => (this.eventTextColor as string)\n    },\n    eventNameFunction (): CalendarEventNameFunction {\n      return typeof this.eventName === 'function'\n        ? this.eventName as CalendarEventNameFunction\n        : (event, timedEvent) => {\n          const name = escapeHTML(event.input[this.eventName as string] as string)\n          if (event.start.hasTime) {\n            if (timedEvent) {\n              const showStart = event.start.hour < 12 && event.end.hour >= 12\n              const start = this.formatTime(event.start, showStart)\n              const end = this.formatTime(event.end, true)\n              const singline = diffMinutes(event.start, event.end) <= this.parsedEventOverlapThreshold\n              const separator = singline ? ', ' : '<br>'\n              return `<strong>${name}</strong>${separator}${start} - ${end}`\n            } else {\n              const time = this.formatTime(event.start, true)\n              return `<strong>${time}</strong> ${name}`\n            }\n          }\n          return name\n        }\n    },\n    eventModeFunction (): CalendarEventOverlapMode {\n      return typeof this.eventOverlapMode === 'function'\n        ? this.eventOverlapMode as CalendarEventOverlapMode\n        : CalendarEventOverlapModes[this.eventOverlapMode]\n    },\n    eventWeekdays (): number[] {\n      return this.parsedWeekdays\n    },\n  },\n\n  methods: {\n    formatTime (withTime: CalendarTimestamp, ampm: boolean): string {\n      const formatter = this.getFormatter({\n        timeZone: 'UTC',\n        hour: 'numeric',\n        minute: withTime.minute > 0 ? 'numeric' : undefined,\n      })\n\n      return formatter(withTime, true)\n    },\n    updateEventVisibility () {\n      if (this.noEvents || !this.eventMore) {\n        return\n      }\n\n      const eventHeight = this.eventHeight\n      const eventsMap = this.getEventsMap()\n\n      for (const date in eventsMap) {\n        const { parent, events, more } = eventsMap[date]\n        if (!more) {\n          break\n        }\n\n        const parentBounds = parent.getBoundingClientRect()\n        const last = events.length - 1\n        let hide = false\n        let hidden = 0\n\n        for (let i = 0; i <= last; i++) {\n          if (!hide) {\n            const eventBounds = events[i].getBoundingClientRect()\n            hide = i === last\n              ? (eventBounds.bottom > parentBounds.bottom)\n              : (eventBounds.bottom + eventHeight > parentBounds.bottom)\n          }\n          if (hide) {\n            events[i].style.display = 'none'\n            hidden++\n          }\n        }\n\n        if (hide) {\n          more.style.display = ''\n          more.innerHTML = this.$vuetify.lang.t(this.eventMoreText, hidden)\n        } else {\n          more.style.display = 'none'\n        }\n      }\n    },\n    getEventsMap (): VDailyEventsMap {\n      const eventsMap: VDailyEventsMap = {}\n      const elements = this.$refs.events as HTMLElement[]\n\n      if (!elements || !elements.forEach) {\n        return eventsMap\n      }\n\n      elements.forEach(el => {\n        const date = el.getAttribute('data-date')\n        if (el.parentElement && date) {\n          if (!(date in eventsMap)) {\n            eventsMap[date] = {\n              parent: el.parentElement,\n              more: null,\n              events: [],\n            }\n          }\n          if (el.getAttribute('data-more')) {\n            eventsMap[date].more = el\n          } else {\n            eventsMap[date].events.push(el)\n            el.style.display = ''\n          }\n        }\n      })\n\n      return eventsMap\n    },\n    genDayEvent ({ event }: CalendarEventVisual, day: CalendarDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n      const dayIdentifier = getDayIdentifier(day)\n      const week = day.week\n      const start = dayIdentifier === event.startIdentifier\n      let end = dayIdentifier === event.endIdentifier\n      let width = WIDTH_START\n      for (let i = day.index + 1; i < week.length; i++) {\n        const weekdayIdentifier = getDayIdentifier(week[i])\n        if (event.endIdentifier >= weekdayIdentifier) {\n          width += WIDTH_FULL\n          if (weekdayIdentifier === event.endIdentifier) {\n            end = true\n          }\n        } else {\n          end = true\n          break\n        }\n      }\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: false }\n\n      return this.genEvent(event, scope, false, {\n        staticClass: 'v-event',\n        class: {\n          'v-event-start': start,\n          'v-event-end': end,\n        },\n        style: {\n          height: `${eventHeight}px`,\n          width: `${width}%`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n        },\n        key: event.index,\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genTimedEvent ({ event, left, width }: CalendarEventVisual, day: CalendarDayBodySlotScope): VNode {\n      const dayIdentifier = getDayIdentifier(day)\n      const start = event.startIdentifier >= dayIdentifier\n      const end = event.endIdentifier > dayIdentifier\n      const top = start ? day.timeToY(event.start) : 0\n      const bottom = end ? day.timeToY(MINUTES_IN_DAY) : day.timeToY(event.end)\n      const height = Math.max(this.eventHeight, bottom - top)\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: true }\n\n      return this.genEvent(event, scope, true, {\n        staticClass: 'v-event-timed',\n        style: {\n          top: `${top}px`,\n          height: `${height}px`,\n          left: `${left}%`,\n          width: `${width}%`,\n        },\n      })\n    },\n    genEvent (event: CalendarEventParsed, scope: object, timedEvent: boolean, data: VNodeData): VNode {\n      const slot = this.$scopedSlots.event\n      const text = this.eventTextColorFunction(event.input)\n      const background = this.eventColorFunction(event.input)\n\n      return this.$createElement('div',\n        this.setTextColor(text,\n          this.setBackgroundColor(background, {\n            on: this.getDefaultMouseEventHandlers(':event', nativeEvent => ({ ...scope, nativeEvent })),\n            directives: [{\n              name: 'ripple',\n              value: this.eventRipple != null ? this.eventRipple : true,\n            }],\n            ...data,\n          })\n        ), slot\n          ? slot(scope)\n          : [this.genName(event, timedEvent)]\n      )\n    },\n    genName (event: CalendarEventParsed, timedEvent: boolean): VNode {\n      return this.$createElement('div', {\n        staticClass: 'pl-1',\n        domProps: {\n          innerHTML: this.eventNameFunction(event, timedEvent),\n        },\n      })\n    },\n    genPlaceholder (day: CalendarTimestamp): VNode {\n      const height = this.eventHeight + this.eventMarginBottom\n\n      return this.$createElement('div', {\n        style: {\n          height: `${height}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genMore (day: CalendarDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n\n      return this.$createElement('div', {\n        staticClass: 'v-event-more pl-1',\n        class: {\n          'v-outside': day.outside,\n        },\n        attrs: {\n          'data-date': day.date,\n          'data-more': 1,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple != null ? this.eventRipple : true,\n        }],\n        on: {\n          click: () => this.$emit('click:more', day),\n        },\n        style: {\n          display: 'none',\n          height: `${eventHeight}px`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    getVisibleEvents (): CalendarEventParsed[] {\n      const start = getDayIdentifier(this.days[0])\n      const end = getDayIdentifier(this.days[this.days.length - 1])\n\n      return this.parsedEvents.filter(\n        event => isEventOverlapping(event, start, end)\n      )\n    },\n    getEventsForDay (day: CalendarTimestamp): CalendarEventParsed[] {\n      const identifier = getDayIdentifier(day)\n      const firstWeekday = this.eventWeekdays[0]\n\n      return this.parsedEvents.filter(\n        event => isEventStart(event, day, identifier, firstWeekday)\n      )\n    },\n    getEventsForDayAll (day: CalendarTimestamp): CalendarEventParsed[] {\n      const identifier = getDayIdentifier(day)\n      const firstWeekday = this.eventWeekdays[0]\n\n      return this.parsedEvents.filter(\n        event => event.allDay && isEventStart(event, day, identifier, firstWeekday)\n      )\n    },\n    getEventsForDayTimed (day: CalendarTimestamp): CalendarEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => !event.allDay && isEventOn(event, identifier)\n      )\n    },\n    getScopedSlots () {\n      if (this.noEvents) {\n        return { ...this.$scopedSlots }\n      }\n\n      const mode = this.eventModeFunction(\n        this.parsedEvents,\n        this.eventWeekdays[0],\n        this.parsedEventOverlapThreshold\n      )\n\n      const getSlotChildren: VEventsToNodes = (day, getter, mapper, timed) => {\n        const events = getter(day)\n\n        if (events.length === 0) {\n          return\n        }\n\n        const visuals = mode(day, events, timed)\n\n        if (timed) {\n          return visuals.map(visual => mapper(visual, day))\n        }\n\n        const children: VNode[] = []\n\n        visuals.forEach((visual, index) => {\n          while (children.length < visual.column) {\n            children.push(this.genPlaceholder(day))\n          }\n          children.push(mapper(visual, day))\n        })\n\n        return children\n      }\n\n      const slots = this.$scopedSlots\n      const slotDay = slots.day\n      const slotDayHeader = slots['day-header']\n      const slotDayBody = slots['day-body']\n\n      return {\n        ...slots,\n        day: (day: CalendarDaySlotScope) => {\n          let children = getSlotChildren(day, this.getEventsForDay, this.genDayEvent, false)\n          if (children && children.length > 0 && this.eventMore) {\n            children.push(this.genMore(day))\n          }\n          if (slotDay) {\n            const slot = slotDay(day)\n            if (slot) {\n              children = children ? children.concat(slot) : slot\n            }\n          }\n          return children\n        },\n        'day-header': (day: CalendarDaySlotScope) => {\n          let children = getSlotChildren(day, this.getEventsForDayAll, this.genDayEvent, false)\n\n          if (slotDayHeader) {\n            const slot = slotDayHeader(day)\n            if (slot) {\n              children = children ? children.concat(slot) : slot\n            }\n          }\n          return children\n        },\n        'day-body': (day: CalendarDayBodySlotScope) => {\n          const events = getSlotChildren(day, this.getEventsForDayTimed, this.genTimedEvent, true)\n          let children: VNode[] = [\n            this.$createElement('div', {\n              staticClass: 'v-event-timed-container',\n            }, events),\n          ]\n\n          if (slotDayBody) {\n            const slot = slotDayBody(day)\n            if (slot) {\n              children = children.concat(slot)\n            }\n          }\n          return children\n        },\n      }\n    },\n  },\n})\n","// Styles\nimport './VCalendarWeekly.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Mixins\nimport CalendarBase from './mixins/calendar-base'\n\n// Util\nimport { getSlot } from '../../util/helpers'\nimport props from './util/props'\nimport {\n  createDayList,\n  getDayIdentifier,\n  createNativeLocaleFormatter,\n} from './util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter } from 'types'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'v-calendar-weekly',\n\n  props: props.weeks,\n\n  computed: {\n    staticClass (): string {\n      return 'v-calendar-weekly'\n    },\n    classes (): object {\n      return this.themeClasses\n    },\n    parsedMinWeeks (): number {\n      return parseInt(this.minWeeks)\n    },\n    days (): CalendarTimestamp[] {\n      const minDays = this.parsedMinWeeks * this.parsedWeekdays.length\n      const start = this.getStartOfWeek(this.parsedStart)\n      const end = this.getEndOfWeek(this.parsedEnd)\n\n      return createDayList(\n        start,\n        end,\n        this.times.today,\n        this.weekdaySkips,\n        Number.MAX_SAFE_INTEGER,\n        minDays\n      )\n    },\n    todayWeek (): CalendarTimestamp[] {\n      const today = this.times.today\n      const start = this.getStartOfWeek(today)\n      const end = this.getEndOfWeek(today)\n\n      return createDayList(\n        start,\n        end,\n        today,\n        this.weekdaySkips,\n        this.parsedWeekdays.length,\n        this.parsedWeekdays.length\n      )\n    },\n    monthFormatter (): CalendarFormatter {\n      if (this.monthFormat) {\n        return this.monthFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', month: 'long' }\n      const shortOptions = { timeZone: 'UTC', month: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    isOutside (day: CalendarTimestamp): boolean {\n      const dayIdentifier = getDayIdentifier(day)\n\n      return dayIdentifier < getDayIdentifier(this.parsedStart) ||\n             dayIdentifier > getDayIdentifier(this.parsedEnd)\n    },\n    genHead (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__head',\n      }, this.genHeadDays())\n    },\n    genHeadDays (): VNode[] {\n      return this.todayWeek.map(this.genHeadDay)\n    },\n    genHeadDay (day: CalendarTimestamp, index: number): VNode {\n      const outside = this.isOutside(this.days[index])\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__head-weekday',\n        class: this.getRelativeClasses(day, outside),\n      }), this.weekdayFormatter(day, this.shortWeekdays))\n    },\n    genWeeks (): VNode[] {\n      const days = this.days\n      const weekDays = this.parsedWeekdays.length\n      const weeks: VNode[] = []\n      for (let i = 0; i < days.length; i += weekDays) {\n        weeks.push(this.genWeek(days.slice(i, i + weekDays)))\n      }\n\n      return weeks\n    },\n    genWeek (week: CalendarTimestamp[]): VNode {\n      return this.$createElement('div', {\n        key: week[0].date,\n        staticClass: 'v-calendar-weekly__week',\n      }, week.map((day, index) => this.genDay(day, index, week)))\n    },\n    genDay (day: CalendarTimestamp, index: number, week: CalendarTimestamp[]): VNode {\n      const outside = this.isOutside(day)\n\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__day',\n        class: this.getRelativeClasses(day, outside),\n        on: this.getDefaultMouseEventHandlers(':day', _e => day),\n      }, [\n        this.genDayLabel(day),\n        ...(getSlot(this, 'day', () => ({ outside, index, week, ...day })) || []),\n      ])\n    },\n    genDayLabel (day: CalendarTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__day-label',\n      }, getSlot(this, 'day-label', day) || [this.genDayLabelButton(day)])\n    },\n    genDayLabelButton (day: CalendarTimestamp): VNode {\n      const color = day.present ? this.color : 'transparent'\n      const hasMonth = day.day === 1 && this.showMonthOnFirst\n\n      return this.$createElement(VBtn, {\n        props: {\n          color,\n          fab: true,\n          depressed: true,\n          small: true,\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': { event: 'click', stop: true },\n          'contextmenu:date': { event: 'contextmenu', stop: true, prevent: true, result: false },\n        }, _e => day),\n      }, hasMonth\n        ? this.monthFormatter(day, this.shortMonths) + ' ' + this.dayFormatter(day, false)\n        : this.dayFormatter(day, false)\n      )\n    },\n    genDayMonth (day: CalendarTimestamp): VNode | string {\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-weekly__day-month',\n      }), getSlot(this, 'day-month', day) || this.monthFormatter(day, this.shortMonths))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: this.staticClass,\n      class: this.classes,\n      nativeOn: {\n        dragstart: (e: MouseEvent) => {\n          e.preventDefault()\n        },\n      },\n    }, [\n      !this.hideHeader ? this.genHead() : '',\n      ...this.genWeeks(),\n    ])\n  },\n})\n","// Styles\nimport './VCalendarWeekly.sass'\n\n// Mixins\nimport VCalendarWeekly from './VCalendarWeekly'\n\n// Util\nimport { parseTimestamp, getStartOfMonth, getEndOfMonth } from './util/timestamp'\nimport { CalendarTimestamp } from 'types'\n\n/* @vue/component */\nexport default VCalendarWeekly.extend({\n  name: 'v-calendar-monthly',\n\n  computed: {\n    staticClass (): string {\n      return 'v-calendar-monthly v-calendar-weekly'\n    },\n    parsedStart (): CalendarTimestamp {\n      return getStartOfMonth(parseTimestamp(this.start, true))\n    },\n    parsedEnd (): CalendarTimestamp {\n      return getEndOfMonth(parseTimestamp(this.end, true))\n    },\n  },\n\n})\n","\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Util\nimport props from '../util/props'\nimport {\n  parseTime,\n  copyTimestamp,\n  updateMinutes,\n  createDayList,\n  createIntervalList,\n  createNativeLocaleFormatter,\n  VTime,\n} from '../util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter } from 'types'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-intervals',\n\n  props: props.intervals,\n\n  computed: {\n    parsedFirstInterval (): number {\n      return parseInt(this.firstInterval)\n    },\n    parsedIntervalMinutes (): number {\n      return parseInt(this.intervalMinutes)\n    },\n    parsedIntervalCount (): number {\n      return parseInt(this.intervalCount)\n    },\n    parsedIntervalHeight (): number {\n      return parseFloat(this.intervalHeight)\n    },\n    firstMinute (): number {\n      return this.parsedFirstInterval * this.parsedIntervalMinutes\n    },\n    bodyHeight (): number {\n      return this.parsedIntervalCount * this.parsedIntervalHeight\n    },\n    days (): CalendarTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips,\n        this.maxDays\n      )\n    },\n    intervals (): CalendarTimestamp[][] {\n      const days: CalendarTimestamp[] = this.days\n      const first: number = this.parsedFirstInterval\n      const minutes: number = this.parsedIntervalMinutes\n      const count: number = this.parsedIntervalCount\n      const now: CalendarTimestamp = this.times.now\n\n      return days.map(d => createIntervalList(d, first, minutes, count, now))\n    },\n    intervalFormatter (): CalendarFormatter {\n      if (this.intervalFormat) {\n        return this.intervalFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', hour: '2-digit', minute: '2-digit' }\n      const shortOptions = { timeZone: 'UTC', hour: 'numeric', minute: '2-digit' }\n      const shortHourOptions = { timeZone: 'UTC', hour: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (tms, short) => short ? (tms.minute === 0 ? shortHourOptions : shortOptions) : longOptions\n      )\n    },\n  },\n\n  methods: {\n    showIntervalLabelDefault (interval: CalendarTimestamp): boolean {\n      const first: CalendarTimestamp = this.intervals[0][0]\n      const isFirst: boolean = first.hour === interval.hour && first.minute === interval.minute\n      return !isFirst\n    },\n    intervalStyleDefault (_interval: CalendarTimestamp): object | undefined {\n      return undefined\n    },\n    getTimestampAtEvent (e: MouseEvent | TouchEvent, day: CalendarTimestamp): CalendarTimestamp {\n      const timestamp: CalendarTimestamp = copyTimestamp(day)\n      const bounds = (e.currentTarget as HTMLElement).getBoundingClientRect()\n      const baseMinutes: number = this.firstMinute\n      const touchEvent: TouchEvent = e as TouchEvent\n      const mouseEvent: MouseEvent = e as MouseEvent\n      const touches: TouchList = touchEvent.changedTouches || touchEvent.touches\n      const clientY: number = touches && touches[0] ? touches[0].clientY : mouseEvent.clientY\n      const addIntervals: number = (clientY - bounds.top) / this.parsedIntervalHeight\n      const addMinutes: number = Math.floor(addIntervals * this.parsedIntervalMinutes)\n      const minutes: number = baseMinutes + addMinutes\n\n      return updateMinutes(timestamp, minutes, this.times.now)\n    },\n    getSlotScope (timestamp: CalendarTimestamp): any {\n      const scope = copyTimestamp(timestamp) as any\n      scope.timeToY = this.timeToY\n      scope.minutesToPixels = this.minutesToPixels\n      scope.week = this.days\n      return scope\n    },\n    scrollToTime (time: VTime): boolean {\n      const y = this.timeToY(time)\n      const pane = this.$refs.scrollArea as HTMLElement\n\n      if (y === false || !pane) {\n        return false\n      }\n\n      pane.scrollTop = y\n\n      return true\n    },\n    minutesToPixels (minutes: number): number {\n      return minutes / this.parsedIntervalMinutes * this.parsedIntervalHeight\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const minutes = parseTime(time)\n\n      if (minutes === false) {\n        return false\n      }\n\n      const min: number = this.firstMinute\n      const gap: number = this.parsedIntervalCount * this.parsedIntervalMinutes\n      const delta: number = (minutes - min) / gap\n      let y: number = delta * this.bodyHeight\n\n      if (clamp) {\n        if (y < 0) {\n          y = 0\n        }\n        if (y > this.bodyHeight) {\n          y = this.bodyHeight\n        }\n      }\n\n      return y\n    },\n  },\n})\n","// Styles\nimport './VCalendarDaily.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Mixins\nimport CalendarWithIntervals from './mixins/calendar-with-intervals'\n\n// Util\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport { CalendarTimestamp } from 'types'\n\n/* @vue/component */\nexport default CalendarWithIntervals.extend({\n  name: 'v-calendar-daily',\n\n  directives: { Resize },\n\n  data: () => ({\n    scrollPush: 0,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-calendar-daily': true,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.$nextTick(this.onResize)\n    },\n    onResize () {\n      this.scrollPush = this.getScrollPush()\n    },\n    getScrollPush (): number {\n      const area = this.$refs.scrollArea as HTMLElement\n      const pane = this.$refs.pane as HTMLElement\n\n      return area && pane ? (area.offsetWidth - pane.offsetWidth) : 0\n    },\n    genHead (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__head',\n        style: {\n          marginRight: this.scrollPush + 'px',\n        },\n      }, [\n        this.genHeadIntervals(),\n        ...this.genHeadDays(),\n      ])\n    },\n    genHeadIntervals (): VNode {\n      const width: string | undefined = convertToUnit(this.intervalWidth)\n\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__intervals-head',\n        style: {\n          width,\n        },\n      }, getSlot(this, 'interval-header'))\n    },\n    genHeadDays (): VNode[] {\n      return this.days.map(this.genHeadDay)\n    },\n    genHeadDay (day: CalendarTimestamp, index: number): VNode {\n      const header = getSlot(this, 'day-header', () => ({\n        week: this.days, ...day, index,\n      }))\n\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-daily_head-day',\n        class: this.getRelativeClasses(day),\n        on: this.getDefaultMouseEventHandlers(':day', _e => {\n          return this.getSlotScope(day)\n        }),\n      }, [\n        this.genHeadWeekday(day),\n        this.genHeadDayLabel(day),\n        ...(header || []),\n      ])\n    },\n    genHeadWeekday (day: CalendarTimestamp): VNode {\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-daily_head-weekday',\n      }), this.weekdayFormatter(day, this.shortWeekdays))\n    },\n    genHeadDayLabel (day: CalendarTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily_head-day-label',\n      }, getSlot(this, 'day-label-header', day) || [this.genHeadDayButton(day)])\n    },\n    genHeadDayButton (day: CalendarTimestamp): VNode {\n      const color = day.present ? this.color : 'transparent'\n\n      return this.$createElement(VBtn, {\n        props: {\n          color,\n          fab: true,\n          depressed: true,\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': { event: 'click', stop: true },\n          'contextmenu:date': { event: 'contextmenu', stop: true, prevent: true, result: false },\n        }, _e => {\n          return day\n        }),\n      }, this.dayFormatter(day, false))\n    },\n    genBody (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__body',\n      }, [\n        this.genScrollArea(),\n      ])\n    },\n    genScrollArea (): VNode {\n      return this.$createElement('div', {\n        ref: 'scrollArea',\n        staticClass: 'v-calendar-daily__scroll-area',\n      }, [\n        this.genPane(),\n      ])\n    },\n    genPane (): VNode {\n      return this.$createElement('div', {\n        ref: 'pane',\n        staticClass: 'v-calendar-daily__pane',\n        style: {\n          height: convertToUnit(this.bodyHeight),\n        },\n      }, [\n        this.genDayContainer(),\n      ])\n    },\n    genDayContainer (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__day-container',\n      }, [\n        this.genBodyIntervals(),\n        ...this.genDays(),\n      ])\n    },\n    genDays (): VNode[] {\n      return this.days.map(this.genDay)\n    },\n    genDay (day: CalendarTimestamp, index: number): VNode {\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-daily__day',\n        class: this.getRelativeClasses(day),\n        on: this.getDefaultMouseEventHandlers(':time', e => {\n          return this.getSlotScope(this.getTimestampAtEvent(e, day))\n        }),\n      }, [\n        ...this.genDayIntervals(index),\n        ...(getSlot(this, 'day-body', () => this.getSlotScope(day)) || []),\n      ])\n    },\n    genDayIntervals (index: number): VNode[] {\n      return this.intervals[index].map(this.genDayInterval)\n    },\n    genDayInterval (interval: CalendarTimestamp): VNode {\n      const height: string | undefined = convertToUnit(this.intervalHeight)\n      const styler = this.intervalStyle || this.intervalStyleDefault\n\n      const data = {\n        key: interval.time,\n        staticClass: 'v-calendar-daily__day-interval',\n        style: {\n          height,\n          ...styler(interval),\n        },\n      }\n\n      const children = getSlot(this, 'interval', () => this.getSlotScope(interval))\n\n      return this.$createElement('div', data, children)\n    },\n    genBodyIntervals (): VNode {\n      const width: string | undefined = convertToUnit(this.intervalWidth)\n      const data = {\n        staticClass: 'v-calendar-daily__intervals-body',\n        style: {\n          width,\n        },\n        on: this.getDefaultMouseEventHandlers(':interval', e => {\n          return this.getTimestampAtEvent(e, this.parsedStart)\n        }),\n      }\n\n      return this.$createElement('div', data, this.genIntervalLabels())\n    },\n    genIntervalLabels (): VNode[] | null {\n      if (!this.intervals.length) return null\n\n      return this.intervals[0].map(this.genIntervalLabel)\n    },\n    genIntervalLabel (interval: CalendarTimestamp): VNode {\n      const height: string | undefined = convertToUnit(this.intervalHeight)\n      const short: boolean = this.shortIntervals\n      const shower = this.showIntervalLabel || this.showIntervalLabelDefault\n      const show = shower(interval)\n      const label = show ? this.intervalFormatter(interval, short) : undefined\n\n      return this.$createElement('div', {\n        key: interval.time,\n        staticClass: 'v-calendar-daily__interval',\n        style: {\n          height,\n        },\n      }, [\n        this.$createElement('div', {\n          staticClass: 'v-calendar-daily__interval-text',\n        }, label),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      class: this.classes,\n      nativeOn: {\n        dragstart: (e: MouseEvent) => {\n          e.preventDefault()\n        },\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }, [\n      !this.hideHeader ? this.genHead() : '',\n      this.genBody(),\n    ])\n  },\n})\n","// Styles\n// import '../../stylus/components/_calendar-daily.styl'\n\n// Types\nimport { VNode, Component } from 'vue'\n\n// Mixins\nimport CalendarWithEvents from './mixins/calendar-with-events'\n\n// Util\nimport props from './util/props'\nimport {\n  DAYS_IN_MONTH_MAX,\n  DAY_MIN,\n  DAYS_IN_WEEK,\n  parseTimestamp,\n  validateTimestamp,\n  relativeDays,\n  nextDay,\n  prevDay,\n  copyTimestamp,\n  updateFormatted,\n  updateWeekday,\n  updateRelative,\n  getStartOfMonth,\n  getEndOfMonth,\n  VTime,\n} from './util/timestamp'\n\n// Calendars\nimport VCalendarMonthly from './VCalendarMonthly'\nimport VCalendarDaily from './VCalendarDaily'\nimport VCalendarWeekly from './VCalendarWeekly'\nimport { CalendarTimestamp } from 'types'\n\n// Types\ninterface VCalendarRenderProps {\n  start: CalendarTimestamp\n  end: CalendarTimestamp\n  component: string | Component\n  maxDays: number\n  weekdays: number[]\n}\n\n/* @vue/component */\nexport default CalendarWithEvents.extend({\n  name: 'v-calendar',\n\n  props: {\n    ...props.calendar,\n    ...props.weeks,\n    ...props.intervals,\n  },\n\n  data: () => ({\n    lastStart: null as CalendarTimestamp | null,\n    lastEnd: null as CalendarTimestamp | null,\n  }),\n\n  computed: {\n    parsedValue (): CalendarTimestamp {\n      return (validateTimestamp(this.value)\n        ? parseTimestamp(this.value, true)\n        : (this.parsedStart || this.times.today))\n    },\n    renderProps (): VCalendarRenderProps {\n      const around = this.parsedValue\n      let component: any = null\n      let maxDays = this.maxDays\n      let weekdays = this.parsedWeekdays\n      let start = around\n      let end = around\n      switch (this.type) {\n        case 'month':\n          component = VCalendarMonthly\n          start = getStartOfMonth(around)\n          end = getEndOfMonth(around)\n          break\n        case 'week':\n          component = VCalendarDaily\n          start = this.getStartOfWeek(around)\n          end = this.getEndOfWeek(around)\n          maxDays = 7\n          break\n        case 'day':\n          component = VCalendarDaily\n          maxDays = 1\n          weekdays = [start.weekday]\n          break\n        case '4day':\n          component = VCalendarDaily\n          end = relativeDays(copyTimestamp(end), nextDay, 4)\n          updateFormatted(end)\n          maxDays = 4\n          weekdays = [\n            start.weekday,\n            (start.weekday + 1) % 7,\n            (start.weekday + 2) % 7,\n            (start.weekday + 3) % 7,\n          ]\n          break\n        case 'custom-weekly':\n          component = VCalendarWeekly\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'custom-daily':\n          component = VCalendarDaily\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        default:\n          throw new Error(this.type + ' is not a valid Calendar type')\n      }\n\n      return { component, start, end, maxDays, weekdays }\n    },\n    eventWeekdays (): number[] {\n      return this.renderProps.weekdays\n    },\n  },\n\n  watch: {\n    renderProps: 'checkChange',\n  },\n\n  mounted () {\n    this.updateEventVisibility()\n    this.checkChange()\n  },\n\n  updated () {\n    window.requestAnimationFrame(this.updateEventVisibility)\n  },\n\n  methods: {\n    checkChange (): void {\n      const { lastStart, lastEnd } = this\n      const { start, end } = this.renderProps\n      if (!lastStart || !lastEnd ||\n        start.date !== lastStart.date ||\n        end.date !== lastEnd.date) {\n        this.lastStart = start\n        this.lastEnd = end\n        this.$emit('change', { start, end })\n      }\n    },\n    move (amount = 1): void {\n      const moved = copyTimestamp(this.parsedValue)\n      const forward = amount > 0\n      const mover = forward ? nextDay : prevDay\n      const limit = forward ? DAYS_IN_MONTH_MAX : DAY_MIN\n      let times = forward ? amount : -amount\n\n      while (--times >= 0) {\n        switch (this.type) {\n          case 'month':\n            moved.day = limit\n            mover(moved)\n            break\n          case 'week':\n            relativeDays(moved, mover, DAYS_IN_WEEK)\n            break\n          case 'day':\n            relativeDays(moved, mover, 1)\n            break\n          case '4day':\n            relativeDays(moved, mover, 4)\n            break\n        }\n      }\n\n      updateWeekday(moved)\n      updateFormatted(moved)\n      updateRelative(moved, this.times.now)\n\n      this.$emit('input', moved.date)\n      this.$emit('moved', moved)\n    },\n    next (amount = 1): void {\n      this.move(amount)\n    },\n    prev (amount = 1): void {\n      this.move(-amount)\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const c = this.$children[0] as any\n      if (c && c.timeToY) {\n        return c.timeToY(time, clamp)\n      } else {\n        return false\n      }\n    },\n    minutesToPixels (minutes: number): number {\n      const c = this.$children[0] as any\n      if (c && c.minutesToPixels) {\n        return c.minutesToPixels(minutes)\n      } else {\n        return -1\n      }\n    },\n    scrollToTime (time: VTime): boolean {\n      const c = this.$children[0] as any\n      if (c && c.scrollToTime) {\n        return c.scrollToTime(time)\n      } else {\n        return false\n      }\n    },\n  },\n\n  render (h): VNode {\n    const { start, end, maxDays, component, weekdays } = this.renderProps\n\n    return h(component, {\n      staticClass: 'v-calendar',\n      class: {\n        'v-calendar-events': !this.noEvents,\n      },\n      props: {\n        ...this.$props,\n        start: start.date,\n        end: end.date,\n        maxDays,\n        weekdays,\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.updateEventVisibility,\n      }],\n      on: {\n        ...this.$listeners,\n        'click:date': (day: CalendarTimestamp) => {\n          if (this.$listeners['input']) {\n            this.$emit('input', day.date)\n          }\n          if (this.$listeners['click:date']) {\n            this.$emit('click:date', day)\n          }\n        },\n      },\n      scopedSlots: this.getScopedSlots(),\n    })\n  },\n})\n","var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.github.io/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n"],"sourceRoot":""}